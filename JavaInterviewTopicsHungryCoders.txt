JDK, JRE, and JVM?
Stack and Heap
Why is the main method in Java declared as public static void main(String[] args)?
What Is the void Type and When is it preferable to Use It?
Access Modifiers
Why Is String an Immutable Class?
String Intern
JAR vs WAR vs EAR
Java is strictly pass-by-value language?
static, abstract and final keywords in Java?
Difference between String, StringBuffer, and StringBuilder?
String.format() 
Enum 
Two Types of Casting in Java?
Is Java statically and strongly typed? 
Does var keyword makes Java as a dynamically typed language?
Why does char use 2 bytes in Java, and not 1 byte like in C/C++?
What is the difference between float and double in Java? When would you use one over the other?
What are wrapper classes in Java, and how do they relate to primitive types?
difference between final, static, and static final variables
OOPs
What is Compile Time Polymorphism and Runtime Polymorphism?
What are the different types of inheritance?
What is diamond problem in Java?
difference between abstract class and interface?
When to use abstract class VS when to use interface?
constructor, copy constructor
Exception handling
What are the scenarios in which finally block will not get executed?
How to use try-with-resources in Java?
Difference Between a Checked and an Unchecked Exception?
Difference Between an Unlabeled and a Labeled break Statement?
Use of the Throw and Throws Keywords?
Difference Between an Error and Exception?
How can you create a custom exception in Java?
try-with-resources:
difference between StackOverflowError and OutOfMemoryError in Java?
What is Java Garbage Collection and how does it work?
What are the different garbage collection algorithms in Java?
What is a memory leak in Java, and how can you detect it?
What are Soft, Weak, and Phantom references in Java
How can you force garbage collection in Java? - System.gc();
What are some of the Useful Annotations used in Java?
What Are Meta-Annotations?
Difference Between Primitive and Reference Types?
Reflection in Java?
Difference Between an Inner Class and a Static Nested Class?
difference between equals() and ==?
What Is an Anonymous Class and what is it's Use Case?
What Is a Marker Interface and examples of Marker Interfaces in Java?
What Is an Immutable Class and how to create it?
Is it possible to Override a Static Method?
How to Compare Two Enum Values?
What is the purpose of the this keyword?
How does the final keyword affect class inheritance and method overriding?
What Are the Wrapper Classes and what is autoboxing and unboxing in Java?
What Is a Var-Arg and how to use it? What are benefits and limitations?

What Is the Difference Between a Process and a Thread?
How can we create a Thread in Java?
Describe the Different States of a Thread?
What Is a Daemon Thread and how to create a Daemon Thread? What are the real use cases of Daemon thread?
What Is the Difference Between the Runnable and Callable Interfaces?
What Is Java Memory Model (JMM) and it' s purpose?
What is Data Race Condition and Visibility problem?
Explain about Deadlock, Livelock, and Starvation conditions in Java Multithreading?
What is Java Executor Service and type of threadpools which can be created with Java Executor service?
What is Producer-Consumer problem and how to resolve it?
What is threadLocal and what are the advantages of using ThreadLocal?
What are Virtual Threads in Java 21?
What is the Fork/Join Framework in Java?
What Is the Purpose of the Wait, Notify and Notifyall Methods?
What Is the Purpose of the Thread.yield()?
What is the purpose of Semaphore?
Approaches to write efficient and scalable code in Java concurrency?

Collections : 
What Is the Difference Between Fail-Safe and Fail-Fast Iterators?
What is the Difference Between Linkedlist and Arraylist?
What is the Difference Between HashMap and HashTable?
What Is the Difference Between Hashset and Treeset?
How Is Hashmap Implemented in Java (explain in detail)?
What Is the use of the Initial Capacity and Load Factor Parameters of a Hashmap and their Default Values?
Explain about EnumSet and EnumMap?
How to Use Comparable and Comparator Interfaces to Sort Collections?
What Are the Main Interfaces in Java Collections?
What are the differences between Collection and Collections in Java?
How do you implement a custom collection in Java?
What is the difference between HashMap and LinkedHashMap?
How does ConcurrentHashMap work and how is it different from HashMap?
Explain the internal structure and working of a TreeMap.
How does a PriorityQueue work and how is it different from a regular queue?
What is the difference between deep copy and shallow copy in collections?
How do you handle duplicates in collections such as List, Set, and Map?
What is the difference between Synchronized Collections and Concurrent Collections in Java?

Generics :
What Is a Generic Type Parameter and why are they used??
What is type erasure in the context of Java Generics?
Explain the difference between bounded and unbounded type parameters?
What are wildcards in Java Generics? Explain the use of ? extends T and ? super
What are the benefits and limitations of using generics in Java?
Is It Possible to Declared a Multiple Bounded Type Parameter?
How do you define a generic method in Java? Provide an example
Can you create a generic array in Java? Why or why not?
What is the diamond operator (<>) in Java Generics, and how is it used?

Java I/O and Java NIO
What are the main differences between Java I/O and Java NIO?
Explain the purpose and usage of the FileInputStream and FileOutputStream classes in Java I/O.
How does the BufferedReader class improve the performance of reading text files in Java?
What is the role of the FileReader and FileWriter classes in Java I/O?
Describe how you can read and write objects to a file using Java serialization.


What is JDBC, and why is it used in Java applications?
What is JPA, and how does it simplify database operations in Java applications?
Hibernate

Explain about the new Features which were Added in Java 8?
functional interface
lambda expression
stream api
default and static methods in interface
What Is Nashorn in Java8?
What Is a Java Stream and what is difference between Stream and Collection?

What is a method reference and how is it different from a lambda expression?
What are the key improvements in the Date and Time API in Java 8?

Java Streams Grouping and Aggregation
What is an immutable list in Java, and how can you create one with Java Streams that allows null values?
How do you create a modifiable list that allows null values using Java Streams?
Explain grouping in Java Streams. How can you group elements of a list by a specific attribute? Provide an example.
What is aggregation in Java Streams, and why is it useful? Give examples of aggregation operations.
What are summary statistics in Java Streams? How do they differ from basic aggregation operations like counting or summing?
How would you filter items in a stream based on a specific attribute, such as price? Explain with an example.
Record
Sealed class
Vector Api

What are Future and CompletableFuture in Java, and how are they used? there differences
How can you handle exceptions in CompletableFuture?
Can CompletableFuture execute multiple tasks in parallel and wait for all to complete?
How can you chain multiple asynchronous computations with CompletableFuture?
How can you handle both the result and exceptions in a CompletableFuture?
How does CompletableFuture support combining two futures with different results?
What is the role of the join() method in CompletableFuture?
What is the difference between thenCompose() and thenCombine() in CompletableFuture?
How does CompletableFuture.runAsync() differ from supplyAsync()?


Spring Boot


System Design basics
How to scale your application to million users? Share best approaches and components which can be useful to scale applications
1. Vertical Scaling: The Easy Way
2. Horizontal Scaling
3. Load Balancers: The Traffic Cops of Your System ðŸš¦
4. Database Scaling
5. Caching for Speed
6. CDNs Explained
7. Microservices Architecture: Breaking Things Down for Better Growth
8. Scaling Globally for Disaster Recovery

Explain the Pros, Cons, and Use Cases of REST, GraphQL, and gRPC?
What are the SOLID principles of object-oriented design, and why are they important?
What are redundancy and failover strategies for load balancers, and how do they ensure high availability and fault tolerance?
What are Functional VS Non-Functional requirements in system design? Explain with MicroService use case.
Explain about blue green deployment strategy and compare with Canary?
Explain about Latency and Throughput  metrics in system design?

Explain about High-Level Design (HLD) and Low-Level Design (LLD) in system design?
Difference between Authentication and Authorization?
What is UML diagram?
Explain about CAP theorem?


















